# Redirect HTTP -> HTTPS and allow ACME challenge
server {
  listen 80;
  listen [::]:80;
  server_name youyesyouv2.ddns.net;

  location /.well-known/acme-challenge/ {
    root /var/www/html;
  }

  location / {
    return 301 https://$host$request_uri;
  }
}

# HTTPS site
server {
  listen 443 ssl http2;
  listen [::]:443 ssl http2;
  server_name youyesyouv2.ddns.net;

  ssl_certificate     /etc/letsencrypt/live/youyesyouv2.ddns.net/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/youyesyouv2.ddns.net/privkey.pem;
  ssl_trusted_certificate /etc/letsencrypt/live/youyesyouv2.ddns.net/chain.pem;

  ssl_session_timeout 1d;
  ssl_session_cache shared:SSL:10m;
  ssl_protocols TLSv1.2 TLSv1.3;
  ssl_prefer_server_ciphers off;

  # Health
  location /health {
    proxy_pass http://127.0.0.1:5000/health;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
  }

  # App reverse proxy (WebSocket/SSE friendly)
  location / {
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";

    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;

    proxy_read_timeout 300;
    proxy_send_timeout 300;

    proxy_cache_bypass $http_upgrade;
    proxy_pass http://127.0.0.1:5000;
  }
}
